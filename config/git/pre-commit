#!/bin/sh
#
# Check for ruby style errors

red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
NC='\033[0m'

if git rev-parse --verify HEAD >/dev/null 2>&1; then
  against=HEAD
else
  # Initial commit: diff against an empty tree object
  # Change it to match your initial commit sha
  against=123acdac4c698f24f2352cf34c3b12e246b48af1
fi

# Check if rubocop is installed for the current project
bin/bundle exec rubocop -v >/dev/null 2>&1 || {
  echo >&2 "${red}[rubocop]: Add rubocop to your Gemfile"
  exit 1
}

# Get only the staged files
EXCLUDE="db/schema.rb"
FILES="$(git diff --cached --name-only --diff-filter=AMC | grep "\.rb$" | grep -v ${EXCLUDE} | tr '\n' ' ')"

if [ -n "$FILES" ]; then
  echo "${green}[rubocop]: ${FILES}${NC}"

  if [ ! -f '.rubocop.yml' ]; then
    echo "${yellow}[rubocop]: No .rubocop.yml config file.${NC}"
  fi

  # Run rubocop on the staged files
  bin/bundle exec rubocop ${FILES}

  if [ $? -ne 0 ]; then
    echo "${red}[rubocop]: Fix the issues and commit again${NC}"
    exit 1
  fi

  if [ $SKIP_TEST != "1" ]; then
    if [ -d test ]; then
      bin/bundle exec rails test

      if [ $? -ne 0 ]; then
        echo "${red}[minitest]: Fix the issues and commit again${NC}"
        exit 1
      fi
    fi

    if [ -d spec ]; then
      bin/bundle exec rspec

      if [ $? -ne 0 ]; then
        echo "${red}[rspec]: Fix the issues and commit again${NC}"
        exit 1
      fi
    fi
  fi
else
  echo "${green}[rubocop]: No files to check${NC}"
fi

exit 0
