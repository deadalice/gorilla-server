json = render "layouts/header", object: @package

json_package = render "show", package: @package

# TODO: Remove to leave it only in settings?
if @package.external?
  json_package[:external_url] = @package.external_url
  json[:checksum] = @package.checksum
  json[:hash_type] = @package.hash_type
end

json_package[:required_components] = []
json_package[:optional_components] = []
json_package[:required_packages] = []
json_package[:optional_packages] = []
@package.dependencies.map do |d|
  if d.required_component?
    # Install after main package
    json_package[:required_components] << (render "show", package: d.dependent_package)
  elsif d.optional_component?
    # Selectable options, install after main package
    json_package[:optional_components] << (render "show", package: d.dependent_package)
  elsif d.required_package?
    # Install before main package
    json_package[:required_packages] << (render "show", package: d.dependent_package)
  elsif d.optional_package?
    # Install after main package with separate wizard
    json_package[:optional_packages] << (render "show", package: d.dependent_package)
  end
end

json_package[:data] = @package.data.except(:allow_api_access)

json[:package] = json_package

log_json json
