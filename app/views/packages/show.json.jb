json = render "layouts/header", object: @package

json_package = render "show", package: @package

if @package.external?
  json_package[:external_url] = @package.external_url
elsif @package.published?
  json_package[:required_components] = []
  json_package[:optional_components] = []
  json_package[:required_packages] = []
  json_package[:optional_packages] = []
  @package.dependencies.map do |d|
    if d.required_component?
      json_package[:required_components] << (render "show", package: d.component)
    elsif d.optional_component?
      json_package[:optional_components] << (render "show", package: d.component)
    elsif d.required_package?
      json_package[:required_packages] << (render "show", package: d.component)
    elsif d.optional_package?
      json_package[:optional_packages] << (render "show", package: d.component)
    end
  end

  json_package[:destination] = @package.destination
  json_package[:sources] = @package.sources.published.map do |source|
    render "sources/show", source: source
  end
end

json[:package] = json_package

log_json json
